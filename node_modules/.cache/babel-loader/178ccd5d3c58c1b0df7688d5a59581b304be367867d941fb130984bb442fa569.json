{"ast":null,"code":"var _jsxFileName = \"/Users/resecsystems/Documents/Test/src/File1.jsx\";\nimport React, { useState } from 'react';\nimport HOC from './HOC';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst File1 = () => {\n  const {\n    count,\n    countin\n  } = props;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        onMouseOver: countin,\n        children: [\"files:\", count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = File1;\nexport default _c2 = HOC(File1);\nvar _c, _c2;\n$RefreshReg$(_c, \"File1\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","HOC","jsxDEV","_jsxDEV","Fragment","_Fragment","File1","count","countin","props","children","onMouseOver","fileName","_jsxFileName","lineNumber","columnNumber","_c","_c2","$RefreshReg$"],"sources":["/Users/resecsystems/Documents/Test/src/File1.jsx"],"sourcesContent":["import React,{useState} from 'react'\nimport HOC from './HOC'\nconst File1 = () => {\n    const{count,countin}=props\n   \n  return (\n    <><div>\n    \n    <h1 onMouseOver={countin}>files:{count}</h1>\n    </div></>\n  )\n}\n\nexport default HOC (File1)"],"mappings":";AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AACpC,OAAOC,GAAG,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACvB,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAChB,MAAK;IAACC,KAAK;IAACC;EAAO,CAAC,GAACC,KAAK;EAE5B,oBACEN,OAAA,CAAAE,SAAA;IAAAK,QAAA,eAAEP,OAAA;MAAAO,QAAA,eAEFP,OAAA;QAAIQ,WAAW,EAAEH,OAAQ;QAAAE,QAAA,GAAC,QAAM,EAACH,KAAK;MAAA;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC;EAAC,gBAAE,CAAC;AAEb,CAAC;AAAAC,EAAA,GATKV,KAAK;AAWX,eAAAW,GAAA,GAAehB,GAAG,CAAEK,KAAK,CAAC;AAAA,IAAAU,EAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAF,EAAA;AAAAE,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}