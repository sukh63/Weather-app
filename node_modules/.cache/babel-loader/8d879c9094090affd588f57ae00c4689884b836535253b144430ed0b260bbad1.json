{"ast":null,"code":"var _jsxFileName = \"/Users/resecsystems/Documents/Test/src/Purecomp.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Purecomp = () => {\n  const employees = [{\n    id: 1,\n    name: 'Alice',\n    country: 'Austria',\n    age: 2\n  }, {\n    id: 2,\n    name: 'Bob',\n    country: 'Belgium',\n    age: 2\n  }, {\n    id: 3,\n    name: 'Carl',\n    country: 'Canada',\n    age: 2\n  }];\n  const results = [];\n  employees.forEach((employee, index) => {\n    results.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"name: \", employee.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"country: \", employee.country]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }, this));\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [employees.map((gf, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Name:\", gf.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Name:\", gf.country]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 1\n      }, this)), results, employees.filter(name => name.includes('A')).map(filtername => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: filtername\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_c = Purecomp;\nexport default Purecomp;\nvar _c;\n$RefreshReg$(_c, \"Purecomp\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Purecomp","employees","id","name","country","age","results","forEach","employee","index","push","children","fileName","_jsxFileName","lineNumber","columnNumber","map","gf","filter","includes","filtername","_c","$RefreshReg$"],"sources":["/Users/resecsystems/Documents/Test/src/Purecomp.jsx"],"sourcesContent":["import React from 'react'\n\nconst Purecomp = () => {\n\n    const employees = [\n        {id: 1, name: 'Alice', country: 'Austria',age:2},\n        {id: 2, name: 'Bob', country: 'Belgium',age:2},\n        {id: 3, name: 'Carl', country: 'Canada',age:2},\n      ];\n    \n      const results = [];\n      employees.forEach((employee, index) => {\n        results.push(\n          <div key={index}>\n            <h2>name: {employee.name}</h2>\n            <h2>country: {employee.country}</h2>\n    \n            <hr />\n          </div>,\n        );\n      });\n  return (\n    <div>\n\n    <div>\n    {employees.map((gf,id)=>(\n<div>\n<h1>{id}</h1>\n    <h1>Name:{gf.name}</h1>\n    <h1>Name:{gf.country}</h1>\n    </div>\n    ))}\n\n    {results}\n\n\n    {employees.filter(name=>name.includes('A')).map(filtername=>(\n\n        <li>{filtername}</li>\n    ))}\n    </div>\n    \n    </div>\n  )\n}\n\nexport default Purecomp"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAEnB,MAAMC,SAAS,GAAG,CACd;IAACC,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,OAAO;IAAEC,OAAO,EAAE,SAAS;IAACC,GAAG,EAAC;EAAC,CAAC,EAChD;IAACH,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,KAAK;IAAEC,OAAO,EAAE,SAAS;IAACC,GAAG,EAAC;EAAC,CAAC,EAC9C;IAACH,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,MAAM;IAAEC,OAAO,EAAE,QAAQ;IAACC,GAAG,EAAC;EAAC,CAAC,CAC/C;EAED,MAAMC,OAAO,GAAG,EAAE;EAClBL,SAAS,CAACM,OAAO,CAAC,CAACC,QAAQ,EAAEC,KAAK,KAAK;IACrCH,OAAO,CAACI,IAAI,eACVX,OAAA;MAAAY,QAAA,gBACEZ,OAAA;QAAAY,QAAA,GAAI,QAAM,EAACH,QAAQ,CAACL,IAAI;MAAA;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC9BhB,OAAA;QAAAY,QAAA,GAAI,WAAS,EAACH,QAAQ,CAACJ,OAAO;MAAA;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAEpChB,OAAA;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA,GAJEN,KAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKV,CACP,CAAC;EACH,CAAC,CAAC;EACN,oBACEhB,OAAA;IAAAY,QAAA,eAEAZ,OAAA;MAAAY,QAAA,GACCV,SAAS,CAACe,GAAG,CAAC,CAACC,EAAE,EAACf,EAAE,kBACzBH,OAAA;QAAAY,QAAA,gBACAZ,OAAA;UAAAY,QAAA,EAAKT;QAAE;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACThB,OAAA;UAAAY,QAAA,GAAI,OAAK,EAACM,EAAE,CAACd,IAAI;QAAA;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACvBhB,OAAA;UAAAY,QAAA,GAAI,OAAK,EAACM,EAAE,CAACb,OAAO;QAAA;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CACJ,CAAC,EAEDT,OAAO,EAGPL,SAAS,CAACiB,MAAM,CAACf,IAAI,IAAEA,IAAI,CAACgB,QAAQ,CAAC,GAAG,CAAC,CAAC,CAACH,GAAG,CAACI,UAAU,iBAEtDrB,OAAA;QAAAY,QAAA,EAAKS;MAAU;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CACvB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAED,CAAC;AAEV,CAAC;AAAAM,EAAA,GA1CKrB,QAAQ;AA4Cd,eAAeA,QAAQ;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}